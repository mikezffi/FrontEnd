{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca000bc2.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n   return (\r\n   <button onClick={onClick} style={{ backgroundColor: color }} className='btn'>\r\n      {text}\r\n   </button>\r\n   )\r\n}\r\n\r\nButton.defaultProps = {\r\n   color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n   text: PropTypes.string,\r\n   color: PropTypes.string,\r\n   onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n   return (\r\n      <header className='header'>\r\n         <h1>{title}</h1>\r\n\r\n         <Button\r\n         color={showAdd ? 'red' : 'green'}\r\n         text={showAdd ? 'Close' : 'Add'}\r\n         onClick={onAdd}\r\n         />\r\n      </header>\r\n   )\r\n}\r\n\r\nHeader.defaultProps = {\r\n   title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n   title: PropTypes.string.isRequired,\r\n}\r\n\r\n/* h1 style={headerStyle}\r\nconst headerStyle = {\r\n   color: 'red',\r\n   backgroundColor: 'black',\r\n} */\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n   return (\r\n      <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n         <h3>\r\n            {task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} />\r\n         </h3>\r\n         <p>{task.day}</p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n   return (\r\n      <>\r\n         {tasks.map((task) => (\r\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n         ))}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n   const [text, setText] = useState('')\r\n   const [day, setDay] = useState('')\r\n   const [reminder, setReminder] = useState(false)\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault()\r\n\r\n      if(!text) {\r\n         alert('Please add a task')\r\n         return\r\n      }\r\n\r\n      onAdd({ text, day, reminder })\r\n\r\n      setText('')\r\n      setDay('')\r\n      setReminder(false)\r\n   }\r\n\r\n   return (\r\n\r\n      <form className='add-form' onSubmit={onSubmit}>\r\n\r\n         <div className='form-control'>\r\n            <label>Task</label>\r\n            <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)} />\r\n         </div>\r\n\r\n         <div className='form-control'>\r\n            <label>Day & Time</label>\r\n            <input type=\"text\" placeholder=\"Add Day and Time\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n         </div>\r\n\r\n         <div className='form-control form-control-check'>\r\n            <label>Set Reminder</label>\r\n            <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n         </div>\r\n\r\n         <input className='btn btn-block' type=\"submit\" value=\"Save Task\" />\r\n\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default AddTask","import { useState } from 'react'\nimport Header from \"./components/Header\";\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n       id: 1,\n       text: 'Doctors Appointment',\n       day: 'Feb 5th at 2:30pm',\n       reminder: true,\n    },\n    {\n       id: 2,\n       text: 'Meeting at School',\n       day: 'Feb 6th at 1:30pm',\n       reminder: true,\n    },\n    {\n       id: 3,\n       text: 'Food Shopping',\n       day: 'Feb 5th at 2:30pm',\n       reminder: false,\n    }\n ])\n\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  //click on the red X to delete the task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //doubleclick to toggle reminder marker\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={ () => setShowAddTask(!showAddTask) } showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? ( <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> ) : ( 'No tasks to show.' )}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}